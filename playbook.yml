---
- hosts: all

  force_handlers: true

  vars:
    apps_to_restart: []

  tasks:
    # - name: Install tools
    #   apt:
    #     name:
    #       - vim
    #       - telnet
    #     update_cache: yes
    #   become: true
        
    # - name: Check if Docker is installed
    #   command: docker --version
    #   register: try_run_docker
    #   ignore_errors: yes

    # - name: Install Docker
    #   include_tasks: ./tasks/install_docker.yml
    #   when: try_run_docker is failed

    # - name: Mount ntfs hdd
    #   include_tasks: ./tasks/mount_ntfs.yml

    - name: Run Docker applications
      include_tasks: ./tasks/run_docker_compose.yml


  handlers:
    - name: Run Docker Compose
      docker_compose:
        project_name: Raspberry Media Server
        project_src: ~/.ansible/compose/
        remove_orphans: true

    - name: Set nginx to restart
      set_fact: 
        apps_to_restart: "{{ apps_to_restart + [ 'nginx' ] }}"

    - name: Set transmission to restart
      set_fact: 
        apps_to_restart: "{{ apps_to_restart + [ 'transmission' ] }}"

    - name: Set radarr to restart
      set_fact: 
        apps_to_restart: "{{ apps_to_restart + [ 'radarr' ] }}"

    - name: Set sonarr to restart
      set_fact: 
        apps_to_restart: "{{ apps_to_restart + [ 'sonarr' ] }}"

    - name: Set jackett to restart
      set_fact: 
        apps_to_restart: "{{ apps_to_restart + [ 'jackett' ] }}"

    - name: Set bazarr to restart
      set_fact: 
        apps_to_restart: "{{ apps_to_restart + [ 'bazarr' ] }}"

    - name: Restart services
      docker_compose:
        project_name: Raspberry Media Server
        project_src: ~/.ansible/compose/
        restarted: true
        services: "{{ apps_to_restart }}"
      listen:
        - Set nginx to restart
        - Set transmission to restart
        - Set radarr to restart
        - Set sonarr to restart
        - Set jackett to restart
        - Set bazarr to restart
